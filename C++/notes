Usually we want the remainder to always be between 0...mâˆ’1. However, in
C++ and other languages, the remainder of a negative number is either zero or
negative. An easy way to make sure there are no negative remainders is to first
calculate the remainder as usual and then add m if the result is negative:
x = x%m;
if (x < 0) x += m;
However, this is only needed when there are subtractions in the code and the
remainder may become negative.

int a = 123456789;
long long b = a*a;
cout << b << "\n"; // -1757895751

b = (long long) a*a;
cout << b << "\n"; // correct answer
